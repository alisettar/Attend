@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResource> Localizer
@model PaginatedResponse<AttendanceViewModel>

@{
    ViewData["Title"] = Localizer["EventDetails"];
    var evt = ViewBag.Event as EventViewModel;
    var statusFilter = ViewBag.StatusFilter as string ?? "";
}

@if (evt == null)
{
    <div class="alert alert-danger">Event not found</div>
    return;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="bi bi-calendar-event me-2"></i>@evt.Title</h2>
    <div>
        <a asp-controller="Scanner" asp-action="Index" asp-route-eventId="@evt.Id" class="btn btn-primary me-2">
            <i class="bi bi-qr-code-scan me-1"></i>@Localizer["QuickScan"]
        </a>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i>@Localizer["BackToEvents"]
        </a>
    </div>
</div>

<div class="card mb-4">
    <div class="card-body">
        <h5 class="card-title mb-3"><i class="bi bi-info-circle me-2"></i>@Localizer["Description"]</h5>
        <p class="mb-3">@evt.Description</p>
        <p class="text-muted mb-0">
            <i class="bi bi-calendar3 me-2"></i>@Localizer["Date"]: @evt.Date.ToString("dd MMM yyyy HH:mm")
        </p>
    </div>
</div>

@* Statistics Card *@
<div class="row mb-4">
    <div class="col-md-4 mb-3">
        <div class="card bg-primary bg-opacity-10 border-primary">
            <div class="card-body text-center">
                <i class="bi bi-people-fill fs-1 text-primary mb-2"></i>
                <h3 class="mb-0">@Model.TotalCount</h3>
                <p class="text-muted mb-0">@Localizer["TotalRegistered"]</p>
            </div>
        </div>
    </div>
    <div class="col-md-4 mb-3">
        <div class="card bg-success bg-opacity-10 border-success">
            <div class="card-body text-center">
                <i class="bi bi-check-circle-fill fs-1 text-success mb-2"></i>
                <h3 class="mb-0">@Model.Items.Count(a => a.Status == "CheckedIn")</h3>
                <p class="text-muted mb-0">@Localizer["TotalCheckedIn"]</p>
            </div>
        </div>
    </div>
    <div class="col-md-4 mb-3">
        <div class="card bg-danger bg-opacity-10 border-danger">
            <div class="card-body text-center">
                <i class="bi bi-x-circle-fill fs-1 text-danger mb-2"></i>
                <h3 class="mb-0">@Model.Items.Count(a => a.Status == "Cancelled")</h3>
                <p class="text-muted mb-0">@Localizer["TotalCancelled"]</p>
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h4 class="mb-0">
        <i class="bi bi-people me-2"></i>@Localizer["AttendeeList"] (@Model.TotalCount)
    </h4>
    <form method="get" class="d-flex gap-2">
        <input type="hidden" name="id" value="@evt.Id" />
        <select name="status" class="form-select" style="width: auto;" onchange="this.form.submit()">
            <option value="">@Localizer["AllStatuses"]</option>
            <option value="Registered" selected="@(statusFilter == "Registered")">@Localizer["Registered"]</option>
            <option value="CheckedIn" selected="@(statusFilter == "CheckedIn")">@Localizer["CheckedIn"]</option>
            <option value="Cancelled" selected="@(statusFilter == "Cancelled")">@Localizer["Cancelled"]</option>
        </select>
    </form>
</div>

@if (Model.Items.Any())
{
    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="table-dark">
                <tr>
                    <th><i class="bi bi-person me-1"></i>@Localizer["Name"]</th>
                    <th><i class="bi bi-info-circle me-1"></i>@Localizer["Status"]</th>
                    <th><i class="bi bi-clock me-1"></i>@Localizer["CheckInTime"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var attendance in Model.Items)
                {
                    var badgeClass = attendance.Status switch
                    {
                        "CheckedIn" => "success",
                        "Cancelled" => "danger",
                        _ => "secondary"
                    };
                    <tr>
                        <td><strong>@attendance.UserName</strong></td>
                        <td>
                            <span class="badge bg-@badgeClass">
                                <i class="bi bi-@(attendance.Status == "CheckedIn" ? "check-circle" : attendance.Status == "Cancelled" ? "x-circle" : "clock") me-1"></i>
                                @Localizer[attendance.Status]
                            </span>
                        </td>
                        <td>
                            @if (attendance.CheckedInAt.HasValue)
                            {
                                <span class="text-success">
                                    <i class="bi bi-check-circle-fill me-1"></i>
                                    @attendance.CheckedInAt.Value.ToString("dd MMM yyyy HH:mm")
                                </span>
                            }
                            else
                            {
                                <span class="text-muted">-</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
    @* Pagination *@
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Details" asp-route-id="@evt.Id" asp-route-page="@(Model.Page - 1)" asp-route-status="@statusFilter">
                        @Localizer["Previous"]
                    </a>
                </li>
                
                @for (int i = 1; i <= Math.Min(5, Model.TotalPages); i++)
                {
                    <li class="page-item @(Model.Page == i ? "active" : "")">
                        <a class="page-link" asp-action="Details" asp-route-id="@evt.Id" asp-route-page="@i" asp-route-status="@statusFilter">@i</a>
                    </li>
                }
                
                @if (Model.TotalPages > 5)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                    <li class="page-item @(Model.Page == Model.TotalPages ? "active" : "")">
                        <a class="page-link" asp-action="Details" asp-route-id="@evt.Id" asp-route-page="@Model.TotalPages" asp-route-status="@statusFilter">@Model.TotalPages</a>
                    </li>
                }
                
                <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="Details" asp-route-id="@evt.Id" asp-route-page="@(Model.Page + 1)" asp-route-status="@statusFilter">
                        @Localizer["Next"]
                    </a>
                </li>
            </ul>
        </nav>
        <p class="text-center text-muted">
            @Localizer["ShowingResults"] @((Model.Page - 1) * Model.PageSize + 1) - @Math.Min(Model.Page * Model.PageSize, Model.TotalCount) / @Model.TotalCount
        </p>
    }
}
else
{
    <div class="alert alert-info text-center">
        <i class="bi bi-info-circle me-2"></i>@Localizer["NoAttendeesYet"]
    </div>
}

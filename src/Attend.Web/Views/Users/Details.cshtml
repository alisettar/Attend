@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResource> Localizer
@model UserViewModel

@{
    ViewData["Title"] = Localizer["UserDetails"];
}

<div class="row">
    <div class="col-lg-8">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4 class="mb-0">@Localizer["UserDetails"]</h4>
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning btn-sm">
                        <i class="bi bi-pencil"></i> @Localizer["Edit"]
                    </a>
                    <a asp-action="Index" class="btn btn-secondary btn-sm">
                        <i class="bi bi-arrow-left"></i> @Localizer["BackToList"]
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-md-3 fw-bold">@Localizer["Name"]:</div>
                    <div class="col-md-9">@Model.Name</div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-md-3 fw-bold">@Localizer["Email"]:</div>
                    <div class="col-md-9">
                        @if (!string.IsNullOrEmpty(Model.Email))
                        {
                            <a href="mailto:@Model.Email">@Model.Email</a>
                        }
                        else
                        {
                            <span class="text-muted">-</span>
                        }
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-md-3 fw-bold">@Localizer["Phone"]:</div>
                    <div class="col-md-9">
                        @if (!string.IsNullOrEmpty(Model.Phone))
                        {
                            <a href="tel:@Model.Phone">@Model.Phone</a>
                        }
                        else
                        {
                            <span class="text-muted">-</span>
                        }
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-md-3 fw-bold">@Localizer["QRCode"]:</div>
                    <div class="col-md-9">
                        <code class="fs-6">@Model.QRCode</code>
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-md-3 fw-bold">@Localizer["CreatedAt"]:</div>
                    <div class="col-md-9">@Model.CreatedAt.ToString("dd MMM yyyy HH:mm")</div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="bi bi-qr-code"></i> @Localizer["QRCode"]</h5>
            </div>
            <div class="card-body text-center">
                @if (!string.IsNullOrEmpty(Model.QRCodeImage))
                {
                    <div class="bg-white p-4 rounded d-inline-block">
                        <img src="data:image/png;base64,@Model.QRCodeImage" alt="QR Code" class="img-fluid" style="max-width: 200px;" />
                    </div>
                    <div class="mt-3">
                        <a href="data:image/png;base64,@Model.QRCodeImage" download="@Model.Name.Replace(" ", "_")_QR.png" class="btn btn-primary btn-sm">
                            <i class="bi bi-download"></i> @Localizer["DownloadQR"]
                        </a>
                    </div>
                }
                else
                {
                    <div class="text-muted">@Localizer["QRCodeNotGenerated"]</div>
                }
                <div class="mt-2">
                    <small class="text-muted">@Model.QRCode</small>
                </div>
            </div>
        </div>
        
        <div class="card mt-4">
            <div class="card-header">
                <h5 class="mb-0"><i class="bi bi-info-circle"></i> @Localizer["Statistics"]</h5>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between mb-2">
                    <span>@Localizer["TotalEvents"]:</span>
                    <strong>@Model.AttendanceCount</strong>
                </div>
            </div>
        </div>
    </div>
</div>

@* Attendance History *@
@{
    var attendances = ViewBag.Attendances as PaginatedResponse<AttendanceViewModel>;
}

@if (attendances != null && attendances.TotalCount > 0)
{
    <div class="card mt-4">
        <div class="card-header">
            <h4 class="mb-0">
                <i class="bi bi-calendar-check me-2"></i>@Localizer["AttendanceHistory"] (@attendances.TotalCount)
            </h4>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th><i class="bi bi-calendar-event me-1"></i>@Localizer["Event"]</th>
                            <th><i class="bi bi-info-circle me-1"></i>@Localizer["Status"]</th>
                            <th><i class="bi bi-clock me-1"></i>@Localizer["CheckInTime"]</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var attendance in attendances.Items)
                        {
                            var badgeClass = attendance.Status switch
                            {
                                "CheckedIn" => "success",
                                "Cancelled" => "danger",
                                _ => "secondary"
                            };
                            <tr>
                                <td>
                                    <a asp-controller="Events" asp-action="Details" asp-route-id="@attendance.EventId">
                                        <strong>@attendance.EventTitle</strong>
                                    </a>
                                </td>
                                <td>
                                    <span class="badge bg-@badgeClass">
                                        <i class="bi bi-@(attendance.Status == "CheckedIn" ? "check-circle" : attendance.Status == "Cancelled" ? "x-circle" : "clock") me-1"></i>
                                        @Localizer[attendance.Status]
                                    </span>
                                </td>
                                <td>
                                    @if (attendance.CheckedInAt.HasValue)
                                    {
                                        <span class="text-success">
                                            <i class="bi bi-check-circle-fill me-1"></i>
                                            @attendance.CheckedInAt.Value.ToString("dd MMM yyyy HH:mm")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            @* Pagination *@
            @if (attendances.TotalPages > 1)
            {
                <nav aria-label="Page navigation" class="mt-3">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(attendances.Page == 1 ? "disabled" : "")">
                            <a class="page-link" asp-action="Details" asp-route-id="@Model.Id" asp-route-page="@(attendances.Page - 1)">
                                @Localizer["Previous"]
                            </a>
                        </li>
                        
                        @for (int i = 1; i <= Math.Min(5, attendances.TotalPages); i++)
                        {
                            <li class="page-item @(attendances.Page == i ? "active" : "")">
                                <a class="page-link" asp-action="Details" asp-route-id="@Model.Id" asp-route-page="@i">@i</a>
                            </li>
                        }
                        
                        @if (attendances.TotalPages > 5)
                        {
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                            <li class="page-item @(attendances.Page == attendances.TotalPages ? "active" : "")">
                                <a class="page-link" asp-action="Details" asp-route-id="@Model.Id" asp-route-page="@attendances.TotalPages">@attendances.TotalPages</a>
                            </li>
                        }
                        
                        <li class="page-item @(attendances.Page == attendances.TotalPages ? "disabled" : "")">
                            <a class="page-link" asp-action="Details" asp-route-id="@Model.Id" asp-route-page="@(attendances.Page + 1)">
                                @Localizer["Next"]
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
}
else if (attendances != null)
{
    <div class="card mt-4">
        <div class="card-header">
            <h4 class="mb-0">
                <i class="bi bi-calendar-check me-2"></i>@Localizer["AttendanceHistory"]
            </h4>
        </div>
        <div class="card-body">
            <div class="alert alert-info text-center">
                <i class="bi bi-info-circle me-2"></i>@Localizer["NoAttendanceHistory"]
            </div>
        </div>
    </div>
}
